<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AuthServer</name>
    </assembly>
    <members>
        <member name="T:AuthServer.Config.Config">
            <summary>
            Identity Server Config Class
            </summary>
        </member>
        <member name="M:AuthServer.Config.Config.GetIdentityResources">
            <summary>
            Get Identity Resources
            </summary>
            <returns></returns>
        </member>
        <member name="M:AuthServer.Config.Config.GetApiResources">
            <summary>
            Get Api Resources
            </summary>
            <returns></returns>
        </member>
        <member name="M:AuthServer.Config.Config.GetClients(System.String)">
            <summary>
            Get Clients
            </summary>
            <param name="devHost"></param>
            <returns></returns>
        </member>
        <member name="M:AuthServer.Config.Config.GetIdentityServerCertificate(Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder,System.String,System.String)">
            <summary>
            Get Certificate
            </summary>
            <returns></returns>
        </member>
        <member name="T:AuthServer.Controllers.AccountsController">
            <summary>
            Accounts Controller
            </summary>
        </member>
        <member name="M:AuthServer.Controllers.AccountsController.#ctor(IdentityServer4.Services.IIdentityServerInteractionService,Microsoft.AspNetCore.Identity.UserManager{Entities.Entities.User},IdentityServer4.Services.IEventService,AutoMapper.IMapper,Service.Services.UserApp.IUserAppService,Microsoft.AspNetCore.Identity.SignInManager{Entities.Entities.User})">
            <summary>
            Constructor
            </summary>
            <param name="interaction"></param>
            <param name="userManager"></param>
            <param name="events"></param>
            <param name="mapper"></param>
            <param name="userAppService"></param>
            <param name="signInManager"></param>
        </member>
        <member name="M:AuthServer.Controllers.AccountsController.Post(Domain.DTO.User.AddUserDto)">
            <summary>
            Add User
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:AuthServer.Controllers.AccountsController.Login(System.String)">
            <summary>
            Entry point into the login workflow
            </summary>
        </member>
        <member name="M:AuthServer.Controllers.AccountsController.Login(Domain.DTO.User.LoginInputModel)">
            <summary>
            Handle post-back from username/password login
            </summary>
        </member>
        <member name="M:AuthServer.Controllers.AccountsController.Logout(System.String)">
            <summary>
            Logout
            </summary>
            <param name="logoutId"></param>
            <returns></returns>
        </member>
        <member name="T:AuthServer.Controllers.Base.BaseController">
            <summary>
            Base Controller
            </summary>
        </member>
        <member name="M:AuthServer.Controllers.Base.BaseController.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:AuthServer.Controllers.HomeController">
            <summary>
            Home Controller
            </summary>
        </member>
        <member name="M:AuthServer.Controllers.HomeController.#ctor(IdentityServer4.Services.IIdentityServerInteractionService)">
            <summary>
            Constructor
            </summary>
            <param name="interaction"></param>
        </member>
        <member name="M:AuthServer.Controllers.HomeController.Index">
            <summary>
            Index
            </summary>
            <returns></returns>
        </member>
        <member name="M:AuthServer.Controllers.HomeController.Error(System.String)">
            <summary>
            Error Page
            </summary>
            <param name="errorId"></param>
            <returns></returns>
        </member>
        <member name="T:AuthServer.Extensions.ConfigureExtension">
            <summary>
            Pipeline Extensions
            </summary>
        </member>
        <member name="M:AuthServer.Extensions.ConfigureExtension.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            General Configuration Method
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AuthServer.Extensions.ConfigureExtension.ConfigureCors(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configure Cors
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:AuthServer.Extensions.ConfigureExtension.SwaggerConfig(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            User Swagger
            </summary>
            <param name="app"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:AuthServer.Extensions.ConfigureServiceExtension">
            <summary>
            Dependency Extensions
            </summary>
        </member>
        <member name="M:AuthServer.Extensions.ConfigureServiceExtension.RegisterServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Register Extensions
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:AuthServer.Extensions.ConfigureServiceExtension.RegisterDbContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add DbContext
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:AuthServer.Extensions.ConfigureServiceExtension.RegisterAutoMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            register auto-mapper
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AuthServer.Extensions.ConfigureServiceExtension.RegisterRepository(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Custom Repositories
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AuthServer.Extensions.ConfigureServiceExtension.RegisterCores(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register Main Core
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:AuthServer.Extensions.HttpResponseExtensions">
            <summary>
            Http Response Extensions
            </summary>
        </member>
        <member name="M:AuthServer.Extensions.HttpResponseExtensions.AddApplicationError(Microsoft.AspNetCore.Http.HttpResponse,System.String)">
            <summary>
            Add Error
            </summary>
            <param name="response"></param>
            <param name="message"></param>
        </member>
        <member name="T:AuthServer.Program">
            <summary>
            Kick Off
            </summary>
        </member>
        <member name="M:AuthServer.Program.Main(System.String[])">
            <summary>
            Entry Point
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:AuthServer.Program.CreateHostBuilder(System.String[])">
            <summary>
            Build Web Host
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:AuthServer.Startup">
            <summary>
            Start Up
            </summary>
        </member>
        <member name="P:AuthServer.Startup.Configuration">
            <summary>
            Public Property for configuration
            </summary>
        </member>
        <member name="P:AuthServer.Startup.Environment">
            <summary>
            Public Property for environment
            </summary>
        </member>
        <member name="M:AuthServer.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="environment"></param>
        </member>
        <member name="M:AuthServer.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure Services
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:AuthServer.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure Pipeline
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
